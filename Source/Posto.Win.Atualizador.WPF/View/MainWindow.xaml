<Window x:Class="Posto.Win.Update.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:nsmvvm="clr-namespace:NS.MVVM"
        nsmvvm:WindowClosingBehavior.Closed="{Binding ClosedCommand}"
        nsmvvm:WindowClosingBehavior.Closing="{Binding FecharCommand}"
        nsmvvm:WindowClosingBehavior.CancelClosing="{Binding CancelaFecharCommand}"
        xmlns:v="clr-namespace:Posto.Win.Update.View"
        xmlns:vm="clr-namespace:Posto.Win.Update.ViewModel"    
        xmlns:b="clr-namespace:Posto.Win.Update.Behavior"    
        xmlns:converter="clr-namespace:Posto.Win.Update.Converters"
        WindowStartupLocation="CenterScreen" 
        Icon="/Resources/icon.ico"
        ResizeMode="CanMinimize" 
        Title="Atualizador - Controle de atualização do servidor" 
        WindowState="Normal"
        ShowInTaskbar="False"
        SourceInitialized="Window_SourceInitialized"
        StateChanged="Window_StateChanged"
        Height="314.333" Width="523.999">

    <Window.DataContext>
        <vm:MainWindowViewModel />
    </Window.DataContext>

    <Window.Resources>
        <DataTemplate DataType="{x:Type vm:LoginViewModel}">
            <v:LoginView />
        </DataTemplate>

        <SolidColorBrush x:Key="ImageButtonBackground" Color="#FF767676" />
        <SolidColorBrush x:Key="ButtonBackground" Color="#FF25A0DA" />

        <Style x:Key="TextoNormal" TargetType="TextBlock">
            <Setter Property="Margin" Value="5" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontFamily" Value="Segoe UI Symbol" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>

        <Style x:Key="TextoNegrito" BasedOn="{StaticResource TextoNormal}" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold" />
        </Style>

        <Style TargetType="Button">
            <Setter Property="Padding" Value="10,5,10,5" />
        </Style>

        <Style TargetType="ToggleButton">
            <Setter Property="Padding" Value="10,5,10,5" />
        </Style>

        <Style TargetType="Label">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Height" Value="15" />
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="bg" BorderBrush="#a5a5a5" BorderThickness="1" Background="White">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type PasswordBox}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="bg" BorderBrush="#a5a5a5" BorderThickness="1" Background="White">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type xctk:MaskedTextBox}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="bg" BorderBrush="#a5a5a5" BorderThickness="1" Background="White">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Botões na grid -->
        <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid Background="Transparent">
                                <ContentPresenter></ContentPresenter>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Canvas x:Key="MiImageLock" Width="16" Height="16" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="14" Height="16" Stretch="Fill" Fill="Black" Data="M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z"/>
        </Canvas>
        <Canvas x:Key="MiImageUnLock" Width="16" Height="16" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="14" Height="14.5" Stretch="Fill" Fill="Black" Data="M423.5 0C339.5.3 272 69.5 272 153.5V224H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48h-48v-71.1c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v80c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-80C576 68 507.5-.3 423.5 0z"/>
        </Canvas>
        <Canvas x:Key="MiImageSync" Width="9" Height="9" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="9" Height="9" Stretch="Fill" Fill="Black" Data="M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z"/>
        </Canvas>
        <Canvas x:Key="MiImagePlay" Width="9" Height="9" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="9" Height="9" Stretch="Fill" Fill="Black" Data="M424.4 214.7L72.4 6.6C43.8-10.3 0 6.1 0 47.9V464c0 37.5 40.7 60.1 72.4 41.3l352-208c31.4-18.5 31.5-64.1 0-82.6z"/>
        </Canvas>
        <Canvas x:Key="MiImagePause" Width="9" Height="9" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="9" Height="9" Stretch="Fill" Fill="Black" Data="M144 479H48c-26.5 0-48-21.5-48-48V79c0-26.5 21.5-48 48-48h96c26.5 0 48 21.5 48 48v352c0 26.5-21.5 48-48 48zm304-48V79c0-26.5-21.5-48-48-48h-96c-26.5 0-48 21.5-48 48v352c0 26.5 21.5 48 48 48h96c26.5 0 48-21.5 48-48z"/>
        </Canvas>
        <Canvas x:Key="MiImageClose" Width="9" Height="9" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="9" Height="9" Stretch="Fill" Fill="Black" Data="M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z"/>
        </Canvas>

        <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></converter:BooleanToVisibilityConverter>
        <converter:InvertBooleanToVisibilityConverter x:Key="InvertBooleanToVisibilityConverter"></converter:InvertBooleanToVisibilityConverter>
        <converter:InvertBooleanConverter x:Key="InvertBooleanConverter"></converter:InvertBooleanConverter>
    </Window.Resources>
    <Window.Background>
        <ImageBrush Stretch="None" ImageSource="/Atualizador;component/Resources/background.png"/>
    </Window.Background>

    <Grid b:FocusBehavior.FocusElement="{Binding FocusElement}">

        <tb:TaskbarIcon
                x:Name="MyNotifyIcon"
                IconSource="/Resources/icon.ico"
                ToolTipText="Atualizador - WinSGM">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <!--<MenuItem Header="Sobre"
                              Command="{Binding SobreContentCommand}"
                              CommandParameter="{Binding}"/>-->
                    <Separator />
                    <MenuItem Header="Forçar atualização"
                              Command="{Binding AtualizarCommand}"
                              CommandParameter="{Binding}" IsEnabled="{Binding AbaAtualizar.IsEnableButtonAtualizar}">
                        <MenuItem.Icon>
                            <Button Content="{StaticResource MiImageSync}" Style="{StaticResource TransparentStyle}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Iniciar sincronização"
                              Command="{Binding IniciarCommand}"
                              CommandParameter="{Binding}" IsEnabled="{Binding AbaAtualizar.IsEnableButtonAtualizar}">
                        <MenuItem.Icon>
                            <Button Content="{StaticResource MiImagePlay}" Style="{StaticResource TransparentStyle}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Pausar sincronização"
                              Command="{Binding PausarCommand}"
                              CommandParameter="{Binding}" IsEnabled="{Binding AbaAtualizar.IsVisibleButtonPausar}">
                        <MenuItem.Icon>
                            <Button Content="{StaticResource MiImagePause}" Style="{StaticResource TransparentStyle}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Fechar programa"
                              Command="{Binding MenuFecharCommand}"
                              CommandParameter="{Binding}">
                        <MenuItem.Icon>
                            <Button Content="{StaticResource MiImageClose}" Style="{StaticResource TransparentStyle}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        <TabControl Visibility="{Binding DynamicContentControlIsActive, Converter={StaticResource InvertBooleanToVisibilityConverter}}" Background="{x:Null}">
            <TabItem Header="Atualização">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" MinHeight="145" />
                        <RowDefinition Height="Auto" MinHeight="80" />
                    </Grid.RowDefinitions>
                    <Grid HorizontalAlignment="Left" Height="145" VerticalAlignment="Top" Width="515">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="99*" />
                            <ColumnDefinition Width="316*" />
                            <ColumnDefinition Width="100*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel VerticalAlignment="Center" Margin="19,40,297,27" Height="78" Grid.ColumnSpan="2">
                            <TextBlock Text="Próxima:" HorizontalAlignment="Right" Style="{StaticResource TextoNegrito}" Foreground="#FF00B030" FontFamily="Segoe UI" />
                            <TextBlock Text="Última:" HorizontalAlignment="Right" Style="{StaticResource TextoNegrito}" Foreground="#FF00B030" FontFamily="Segoe UI" />
                            <TextBlock Text="Versão Atual:" HorizontalAlignment="Right" Style="{StaticResource TextoNegrito}" Foreground="#FF00B030" FontFamily="Segoe UI" FontWeight="Bold" />
                        </StackPanel>
                        <StackPanel VerticalAlignment="Top" Grid.Column="1" Margin="19,40,81,0" Height="78" Grid.ColumnSpan="2">
                            <TextBlock Text="{Binding AbaAtualizar.AtualizarModel.GetDataProximaAtualizacao, Mode=OneWay, StringFormat=dd/MM/yyyy HH:mm}" Style="{StaticResource TextoNormal}" />
                            <TextBlock Text="{Binding AbaAtualizar.AtualizarModel.UltimaData, StringFormat=dd/MM/yyyy}" Style="{StaticResource TextoNormal}" />
                            <TextBlock Text="{Binding AbaAtualizar.AtualizarModel.Versao}" Style="{StaticResource TextoNormal}" Margin="5,5,0,5" />
                        </StackPanel>
                        <Button Cursor="Hand" Command="{Binding BloquearCommand}" Visibility="{Binding AbaAtualizar.BotaoBloquear}" Content="{StaticResource MiImageLock}" Style="{StaticResource TransparentStyle}" Margin="61,5,14,119" Grid.Column="2">
                            <Button.ToolTip>
                                <ToolTip>
                                    <StackPanel>
                                        <TextBlock>Bloquear Configurações</TextBlock>
                                    </StackPanel>
                                </ToolTip>
                            </Button.ToolTip>
                        </Button>
                        <Button Cursor="Hand" Command="{Binding DesbloquearCommand}" Visibility="{Binding AbaAtualizar.BotaoDesbloquear}" Content="{StaticResource MiImageUnLock}" Style="{StaticResource TransparentStyle}" Margin="61,5,14,119" Grid.Column="2">
                            <Button.ToolTip>
                                <ToolTip>
                                    <StackPanel>
                                        <TextBlock>Desbloquear Configurações</TextBlock>
                                    </StackPanel>
                                </ToolTip>
                            </Button.ToolTip>
                        </Button>
                    </Grid>
                    <Border BorderBrush="#FF646464" BorderThickness="1" HorizontalAlignment="Left" Height="2" Margin="0,18,-3,0" VerticalAlignment="Top" Width="515" Grid.Row="1"/>
                    <Grid HorizontalAlignment="Left" Height="80" Grid.Row="1" VerticalAlignment="Top" Width="515" Margin="0,27,-3,0">
                        <StackPanel Margin="360,40,10,7" HorizontalAlignment="Center" VerticalAlignment="Center" Width="145" Height="33">
                            <Button Command="{Binding AtualizarCommand}" IsEnabled="{Binding AbaAtualizar.IsEnableButtonAtualizar}" HorizontalContentAlignment="Right" RenderTransformOrigin="0.456,0.25" Height="28" Content="Atualizar" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            <Button Command="{Binding IniciarCommand}" Visibility="{Binding AbaAtualizar.IsVisibleButtonPausar, Converter={StaticResource InvertBooleanToVisibilityConverter}}" IsEnabled="{Binding AbaAtualizar.IsEnableButtonAtualizar}" VerticalContentAlignment="Center" Content="Iniciar" HorizontalContentAlignment="Right" Height="28" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="74,-28,0,0"/>
                            <Button Command="{Binding PausarCommand}" Visibility="{Binding AbaAtualizar.IsVisibleButtonPausar, Converter={StaticResource BooleanToVisibilityConverter}}" VerticalContentAlignment="Center" Content="Parar" HorizontalContentAlignment="Right" Height="28" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="74,-28,0,0"/>
                        </StackPanel>
                        <StackPanel HorizontalAlignment="Left" Height="57" Margin="0,19,0,0" VerticalAlignment="Top" Width="346">
                            <Label FontWeight="Bold" Content="{Binding AbaAtualizar.Status.StatusLabel.LabelContent}" Height="17" Margin="{Binding AbaAtualizar.Status.StatusLabel.LabelMargin}" Padding="0"/>
                            <ProgressBar Height="13" Margin="10,0" Visibility="{Binding AbaAtualizar.Status.BarraProgresso.Visao}" Value="{Binding AbaAtualizar.Status.BarraProgresso.ProgressoBarra1}" IsIndeterminate="{Binding AbaAtualizar.Status.BarraProgresso.IsIndeterminateBarra1}"/>
                            <ProgressBar Height="13" Margin="10,4,10,0" Visibility="{Binding AbaAtualizar.Status.BarraProgresso.Visao}" Value="{Binding AbaAtualizar.Status.BarraProgresso.ProgressoBarra2}"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>


            <TabItem Header="Configuração" Visibility="{Binding AbaConfiguracoes.Visibilidade}">
                <TabItem.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="White"/>
                        <GradientStop Color="#FFCDCDCD" Offset="1"/>
                        <GradientStop Color="#FFDDDDDD" Offset="0.5"/>
                    </LinearGradientBrush>
                </TabItem.Background>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="18" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="18" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <Label Content="Servidor:" />
                    <TextBox x:Name="InputServidor" Grid.Row="1" Grid.ColumnSpan="2" Text="{Binding AbaConfiguracoes.ConfiguracaoModel.Servidor}" />

                    <Label Content="Porta:" Grid.Column="3"  />
                    <xctk:MaskedTextBox 
                        Grid.Row="1"
                        Grid.Column="3"
                        PromptChar=" "                       
                        Mask="9999"
                        x:Name="InputPorta"
                        Text="{Binding AbaConfiguracoes.ConfiguracaoModel.Porta}" />

                    <Label Content="Banco de dados:" Grid.Column="5" Grid.ColumnSpan="3" />
                    <TextBox x:Name="InputBanco" Grid.Row="1" Grid.Column="5" Grid.ColumnSpan="3" Text="{Binding AbaConfiguracoes.ConfiguracaoModel.Banco}" />

                    <Label Content="Usuário:" Grid.Row="2" />
                    <TextBox x:Name="InputUsuario" Grid.Row="3" Grid.ColumnSpan="4" Text="{Binding AbaConfiguracoes.ConfiguracaoModel.Usuario}" />

                    <Label Content="Senha:" Grid.Row="2" Grid.Column="5" />
                    <PasswordBox x:Name="PasswordBoxSenha"
                                     Grid.Row="3" Grid.Column="5" Grid.ColumnSpan="3"
                                     HorizontalAlignment="Stretch"
                                     b:FocusBehavior.IsFocused="{Binding InputSenhaIsFocused}"
                                     b:PasswordBoxBehavior.BindPassword="True"
                                     b:PasswordBoxBehavior.BoundPassword="{Binding InputSenha, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     >
                        <PasswordBox.InputBindings>
                            <KeyBinding Key="Tab" Command="{Binding InputSenhaIsValidCommand}" />
                            <KeyBinding Key="Enter" Command="{Binding InputSenhaIsValidCommand}" />
                        </PasswordBox.InputBindings>
                    </PasswordBox>

                    <Label Content="Diretório raiz do sistema:" Grid.Row="4" Grid.ColumnSpan="7" />
                    <TextBox x:Name="InputLocalDiretorio" Grid.Row="5" Grid.ColumnSpan="7" Text="{Binding AbaConfiguracoes.ConfiguracaoModel.LocalDiretorio}" />
                    <Button Grid.Row="5" Grid.Column="8" Margin="3,0,0,0" Padding="5,0" Command="{Binding LocalSistemaCommand}">...</Button>

                    <Label Content="Diretório da bin do PostgreSQL:" Grid.Row="6" Grid.ColumnSpan="7" />
                    <TextBox x:Name="InputLocalPg" Grid.Row="7" Grid.ColumnSpan="7" Text="{Binding AbaConfiguracoes.ConfiguracaoModel.LocalPostgres}" />
                    <Button Grid.Row="7" Grid.Column="8" Margin="3,0,0,0" Padding="5,0" Command="{Binding LocalPostgresCommand}">...</Button>

                    <CheckBox x:Name="Check_Leitor" Content="Encerrar Leitor de bombas durante atualização" HorizontalAlignment="Left" Margin="10,11,0,0" Grid.Row="8" VerticalAlignment="Top" IsChecked="{Binding AbaConfiguracoes.ConfiguracaoModel.LeitorBomba}" Grid.ColumnSpan="5" Width="289"/>
                    <CheckBox x:Name="Check_Web" Content="Encerrar Posto web durante atualização" HorizontalAlignment="Left" Margin="10,31,0,0" Grid.Row="8" VerticalAlignment="Top" IsChecked="{Binding AbaConfiguracoes.ConfiguracaoModel.PostoWeb}" Grid.ColumnSpan="5" Width="289"/>
                    <CheckBox x:Name="Check_Backup" Content="Fazer Backup" HorizontalAlignment="Left" Margin="10,11,0,0" Grid.Row="8" VerticalAlignment="Top" IsChecked="{Binding AbaConfiguracoes.ConfiguracaoModel.Backup}" Grid.ColumnSpan="5" Width="289" Grid.Column="4"/>
                    <CheckBox x:Name="Check_Vacuum" Content="Fazer Vaccum" HorizontalAlignment="Left" Margin="10,31,0,0" Grid.Row="8" VerticalAlignment="Top" IsChecked="{Binding AbaConfiguracoes.ConfiguracaoModel.Vacuum}" Grid.ColumnSpan="5" Width="289" Grid.Column="4"/>
                    <CheckBox x:Name="Check_Reindex" Content="Fazer Reindex" HorizontalAlignment="Left" Margin="120,11,0,0" Grid.Row="8" VerticalAlignment="Top" IsChecked="{Binding AbaConfiguracoes.ConfiguracaoModel.Reindex}" Grid.ColumnSpan="5" Width="289" Grid.Column="4"/>

                    <Border Grid.Row="8" Grid.ColumnSpan="8" Margin="0,59,0,10" Background="#FF646464" Height="2" />

                    <Grid Grid.Row="9" Grid.ColumnSpan="8" Margin="0,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                    <Button Command="{Binding SalvarCommand}" IsEnabled="{Binding AbaConfiguracoes.EnableButtonConfiguracao}" Content="Salvar" Grid.Column="6" Margin="0,76,10,-38" HorizontalAlignment="Right" HorizontalContentAlignment="Right" VerticalAlignment="Center" Grid.ColumnSpan="2" Grid.Row="8"/>
                    <Button Command="{Binding TestarConexaoCommand}" Margin="0,77,45,-37" IsEnabled="{Binding AbaConfiguracoes.EnableButtonConfiguracao}" Content="Testar Conexão" HorizontalAlignment="Right" HorizontalContentAlignment="Right" VerticalAlignment="Center" Grid.Column="5" Grid.ColumnSpan="2" Grid.Row="8"/>
                    <Label FontWeight="Bold" Content="{Binding AbaConfiguracoes.MensagemLabel}" Margin="10,84,81,-29" Grid.ColumnSpan="6" Grid.Row="9" />


                </Grid>
            </TabItem>
        </TabControl>

        <ContentControl 
                x:Name="DynamicContentControl"
                Content="{Binding DynamicContentControl}"
                Visibility="{Binding DynamicContentControlIsActive, Converter={StaticResource BooleanToVisibilityConverter}}" 
                IsEnabled="{Binding DynamicContentControlIsActive}" />
    </Grid>
</Window>
